@property --timer-minutes {
    initial-value: 0;
    inherits: true;
    syntax: "<integer>";
}

@property --timer-seconds {
    initial-value: 0;
    inherits: true;
    syntax: "<integer>";
}

@property --timer-rotation {
    initial-value: 110deg;
    inherits: true;
    syntax: "<angle>";
}

@keyframes minutes {
    to {
        --timer-minutes: 60;
    }
}

@keyframes seconds {
    to {
        --timer-seconds: 60;
    }
}

@keyframes rotation {
    to {
        --timer-rotation: 360deg;
    }
}

@keyframes tick {
    /* dummy */
}

body {
    counter-set: minutes var(--timer-minutes) seconds var(--timer-seconds);
    animation-name: minutes, seconds, tick, rotation;
    animation-duration: 3600s, 60s, 1s, 3600s;
    animation-timing-function:
        steps(60),
        steps(60),
        steps(1),
        steps(360);
    animation-direction: reverse, reverse, reverse, reverse;
    animation-iteration-count: 1, 60, 3600, 1;
    animation-play-state: paused;

    & menu {
        visibility: hidden;
    }

    &:not(:has(dialog:modal, input.finished:checked)):has(input.quest:checked) {
        animation-play-state: running;

        & menu {
            visibility: visible;
        }
    }
}

time {
    font: bold 14px sans-serif;
}
time::before {
    content: counter(minutes, decimal-leading-zero);
}

time::after {
    content: counter(seconds, decimal-leading-zero);
}

*,
*::after,
*::before {
    margin: 0;
    box-sizing: border-box;
}

article {
    counter-reset: questions;

    & > header {
        border: 1px solid gray;
        width: 120px;
        height: 120px;

        & > span::before {
            content: counter(answered);
        }

        & > span::after {
            content: counter(questions);
        }
    }
}

body {
    height: 100%;
    border: 5px solid red;
    overflow: hidden;
}

button {
    &.pause, &.finish {
        width: 48px;
        height: 48px;
        border-radius: 8px;
        border: 3px solid green;
        padding: 0;
    }
}

button.navigation {
    border-radius: 8px;
    border: 3px solid green;
    &.next:is(
        article:last-of-type:has(section:last-of-type input.quest:checked)
            button.next
    ),
    &.prev:is(
        article:first-of-type:has(section:first-of-type input.quest:checked)
            button.prev
    ) {
        visibility: hidden;
    }
}

dialog {
    width: 100vw;
    height: 100vh;
    max-width: unset;
    max-height: unset;
    position: relative;
}

div.page {
    height: 100%;
    border: 2px solid pink;
    position: absolute;
    visibility: hidden;
    inset: 0;

    &:has(input.page:checked) {
        visibility: visible;
    }
}

div.prefinish,
div.pause,
div.intro {
    border: 1px solid blue;
    height: 100%;
    visibility: hidden;
    position: fixed;
    inset: 0;

    &:has([name="visible"]:checked) {
        visibility: visible;
    }
}

div.results,
div.prefinish,
div.pause {
    background-color: #fff;
}

div.articles {
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid blue;
    height: 100%;
    gap: 16px;

    visibility: hidden;
    position: fixed;
    inset: 0;

    &:has([name="visible"]:checked) {
        visibility: visible;
    }
}

div.intropages,
div.questions {
    border: 2px solid green;
    position: fixed;
    inset: 0;
    justify-content: center;
    align-items: end;
    gap: 10px;
    /* display: none; */
    visibility: hidden;

    counter-reset: answered;

    &:has([name="visible"]:checked) {
        background-color: #ddd;
        display: flex;
        visibility: visible;
    }
}

div.intropage,
div.question {
    border: 2px solid blue;
    position: fixed;
    inset: 0 0 100px 0;
    /* display: none; */
    visibility: hidden;

    counter-increment: questions;

    &:has([name="visible"]:checked) {
        /*  background-color: #ddd; */
        display: block;
        visibility: visible;
    }

    &:has([type="checkbox"]:checked) > h3 {
        counter-increment: answered;
    }
}

form {
    display: contents;
}

html {
    height: 100%;
}

menu {
    padding: 8px;
    list-style: none;
    position: fixed;
    border: 3px solid green;
    margin: auto;
    top: 10px;
    width: 200px;
    left: calc(50% - 100px);
    height: 68px;
    border-radius: 16px;
    display: flex;
    align-items: center;
    gap: 16px;
}

section {
    & > label {
        overflow: hidden;
        border: 2px solid gray;
        width: 20px;
        height: 20px;
    }

    &:has([name="visible"]:checked) > label {
        background-color: yellow;
    }
}

li:has(time) {
    display: flex;
    place-content: center;
    place-items: center;
    aspect-ratio: 1;
    width: 48px;
    border-radius: 50%;
    border: 4px solid transparent;
    background:
        radial-gradient(#fff) padding-box,
        conic-gradient(
        green 0,
        green var(--timer-rotation),
        #a7a7a7 var(--timer-rotation)
    ) border-box;
    animation: timer 120s linear forwards;
}
